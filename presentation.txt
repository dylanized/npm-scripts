









Simplify Your Systems

with NPM Scripts

===


by @dylanized































NPM Scripts are so hot right now
























baked-in


simple


composable



























OFFICIAL DOCUMENTATION

https://docs.npmjs.com/misc/scripts

http://browsenpm.org/package.json



Nordic.js 2015 â€¢ Kate Hudson - Advanced front-end automation with npm scripts

https://www.youtube.com/watch?v=0RYETb9YVrk




How to Use NPM as a Build Tool

http://blog.keithcirkel.co.uk/how-to-use-npm-as-a-build-tool/




Why NPM Scripts?

https://css-tricks.com/why-npm-scripts/




The @dylanized App Boilerplate

https://github.com/dylanized/app-boilerplate

https://github.com/dylanized/npm-scripts












01 Basic Scripts



{
  "name": "basic-scripts",
  "version": "0.0.1",
  "description": "Basic scripts example",
  "author": "dylanized",
  "license": "MIT",
  "dependencies": {
    "request": "^2.69.0"
  },
  "devDependencies": {
    "mocha": "^2.4.4"
  },  
  "scripts": {
    "stop": " ",
    "test": "mocha test/*.js",
    "clean": "rm tmp/*.*"
  }
}
















Shortcuts

npm start
npm stop
npm restart
npm test

































02  Basic Build Systems


{
  "name": "basic-build-systems",
  "version": "1.0.0",
  "description": "Basic build systems",
  "main": "index.js",
  "author": "dylanized",
  "license": "MIT",
  "devDependencies": {
    "mocha": "^2.4.4"
  },  
  "scripts": {
    "build": "cp package.json tmp",
    "postinstall": "npm run build",
    "start": "node foo.js",
    "test": "mocha test/*.js",
    "clean": "rm tmp/*.*",
    "pretest": "npm run clean && npm run build",
    "archive": "node scripts/archive.js"
  }
}


























terminal commands

OR

bash scripts

OR

node executables

OR

Node scripts
















pre/post hooks























"the npm lifecycle"

install
update
version
publish
start
stop
restart
test























preinstall
install
postinstall

preupdate
update
postupdate

preversion
version
postversion

prepublish
publish
postpublish

pretest
test
posttest

prestart
start
poststart

prestop
stop
poststop

prerestart
restart
postrestart

















02.5  Intermediate Build Systems


{
  "name": "basic-build-systems",
  "version": "1.0.0",
  "description": "Basic build systems",
  "main": "index.js",
  "author": "dylanized",
  "license": "MIT",
  "scripts": {
    "build": "npm run compile && npm run move-assets",
    "compile": "npm compile-css && npm run compile-js",
    "compile-css": " ",
    "compile-js": " ",
    "move-assets": "cp assets/*.* assets2",    
    "postinstall": "npm run build",
    "start": "node foo.js",
    "test": "mocha test/*.js",
    "clean": "rm tmp/*.*",
    "pretest": "npm run clean && npm run build"
  }
}



















03  Complex Build Systems



  "scripts": {
    "==BUILDING==": " ",
    "postinstall": "bower install && npm run build",
    "postupdate": "bower update && npm run build",
    "build": "npm run compile",
    "compile": "npm run compile-css && npm run compile-js",
    "compile-css": " ",
    "compile-js": " ",
    "==WATCHING==": " ",
    "watch": "npm run watch-css & npm run watch-js & npm run watch-server",
    "watch-css": " ",
    "watch-js": " ",
    "watch-server": " ",
    "==RUNNING==": " ",
    "start": "node server.js",
    "build-start": "npm run build && npm run start",
    "watch-start": "npm run watch && npm run start",
    "dev": "npm run reload && npm run build && npm run watch-start",
    "stop": "npm run stopDB && npm run stopSQL"
  }
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
04 Simplifying Complexity


  "scripts": {
    "==BUILDING==": " ",
    "postinstall": "npm-run-all bower-install build",
    "postupdate": "npm-run-all bower-update build",
    "build": "npm run compile",
    "compile": "npm-run-all compile-css compile-js",
    "compile-css": " ",
    "compile-js": " ",
    "bower-install": "bower install",
    "bower-update": "bower update",
    "==WATCHING==": " ",
    "watch": "npm-run-all watch-css watch-js watch-server",
    "watch-css": " ",
    "watch-js": " ",
    "watch-server": " ",
    "==RUNNING==": " ",
    "start": "node server.js",
    "build-start": "npm-run-all build start",
    "watch-start": "npm-run-all watch start",
    "dev": "npm-run-all reload build watch-start",
    "stop": "npm-run-all stopDB stopSQL",
    "uninstall": "npm-run-all destroyDB destroySQL clean"    
  }
  

















05 Database Handling


    "==DATABASE1==": " ",
    "createDB": " ",
    "importDB": " ",
    "seedDB": " ",
    "dropDB": " ",
    "reloadDB": "npm-run-all dropDB seedDB",
    "exportDB": " ",
    "startDB": " ",
    "stopDB": " ",
    "destroyDB": " ",
    
    
    "==DATABASE2==": " ",
    "createSQL": " ",
    "importSQL": " ",
    "seedSQL": " ",
    "dropSQL": " ",
    "loadSQL": " ",
    "reloadSQL": "npm-run-all dropSQL seedSQL",
    "exportSQL": " ",
    "startSQL": " ",
    "stopSQL": " ",
    "destroySQL": " "

















06 Variables



    "==DATABASE1==": " ",
    "createDB": " ",
    "seedDB": "mongoimport -d $npm_package_config_db_name -c $npm_package_config_db_collection --file $npm_package_config_db_seed",
    "dropDB": "mongo legislators_development --eval 'db.dropDatabase()'",
    "reloadDB": "npm-run-all dropDB seedDB",
    "exportDB": " ",
    "startDB": " ",
    "stopDB": " ",
    "destroyDB": " ",
    
    "==DATABASE2==": " ",
    "createSQL": "echo \"create database $npm_package_config_sql_dbname\" | mysql -u $npm_package_config_sql_user -p$npm_package_config_sql_pass",
    "seedSQL": "mysql -u $npm_package_config_sql_user -p$npm_package_config_sql_pass $npm_package_config_sql_dbname < $npm_package_config_sql_seed",
    "dropSQL": "echo \"DROP DATABASE IF EXISTS $npm_package_config_sql_dbname\" | mysql -u $npm_package_config_sql_user -p$npm_package_config_sql_pass",
    "loadSQL": "npm-run-all createSQL seedSQL",
    "reloadSQL": "npm-run-all dropSQL loadSQL",
    "exportSQL": " ",
    "startSQL": " ",
    "stopSQL": " ",
    "destroySQL": " ",
    
    "==UNINSTALL==": " ",
    "uninstall": "npm-run-all destroyDB destroySQL clean",
    "clean": " ", 






















07 Testing





    "==TESTING==": " ",
    "test": "mocha test/[^_]*.js --bail",
    "mocha": "mocha",
    "test-grep": "mocha --grep",
    "env": "env",
    "bin": "ls ./node_modules/.bin/",



























Happy DevOps!


Follow: @dylanized

d@dylanized.com

https://github.com/dylanized/app-boilerplate

https://github.com/dylanized/npm-scripts



















